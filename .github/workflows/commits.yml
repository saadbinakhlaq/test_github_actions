name: Validate Commit Messages


on:
  pull_request:
    types: [opened, edited, synchronize, reopened]

jobs:
  validate-commit-messages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags

      - name: Validate commit messages
        run: |
          base_branch="${{ github.event.pull_request.base.ref }}"
          echo "Base branch is: $base_branch"

          # Make sure we have the latest refs
          git fetch origin $base_branch

          # Get commits that are only in this branch and not in base branch
          commits=$(git log --no-merges --pretty=format:"%s" origin/$base_branch..HEAD)

          echo "Checking commit messages:"
          echo "$commits"

          # Define regex
          regex="^(\[[A-Z]+-\d+\]\s)?(feat|fix|chore|docs|style|refactor|perf|test|build|ci)(\([^)]+\))?:\s.+$"

          failed=0

          while IFS= read -r commit; do
            if [[ ! $commit =~ $regex ]]; then
              echo "::error ::Invalid commit message: '$commit'"
              failed=1
            fi
          done <<< "$commits"

          if [ "$failed" -eq 1 ]; then
            echo "One or more commit messages do not follow the conventional commit format."
            exit 1
          fi
