name: Validate Commit Messages

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]

jobs:
  validate-commit-messages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags

      - name: Validate commit messages
        run: |
          if [ -n "$ACT" ]; then
            # Local act run
            base_branch="master"  # or whatever your default is
            echo "Running locally, assuming base branch: $base_branch"
          else
            # Real GitHub Actions
            base_branch="${{ github.event.pull_request.base.ref }}"
            echo "Running on GitHub Actions, base branch is: $base_branch"
          fi

          if [ -z "$ACT" ]; then
            echo "Fetching base branch $base_branch..."
            git fetch origin $base_branch
          fi

          # Get commits that are only in this branch and not in base branch
          commits=$(git log --no-merges --pretty=format:"%s" origin/$base_branch..HEAD)

          echo "Checking commit messages:"
          if [ -z "$commits" ]; then
            echo "::error ::No commits found between $base_branch and $current_branch."
            exit 0
          fi          
          echo "$commits"

          # Define regex
          regex='^(\[[A-Z]+-[0-9]+\] )?(feat|fix|chore|docs|style|refactor|perf|test|build|ci)(\([^)]+\))?: .+$'

          failed=0

          while IFS= read -r commit; do
            if [[ ! $commit =~ $regex ]]; then
              echo "::error ::Invalid commit message: '$commit'"
              failed=1
            fi
          done <<< "$commits"

          if [ "$failed" -eq 1 ]; then
            echo "One or more commit messages do not follow the conventional commit format."
            exit 1
          fi
